{"version":3,"file":"static/js/907.f96af7fe.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.phonebook.contacts.items;\nexport const getIsLoading = state => state.phonebook.contacts.isLoading;\nexport const getError = state => state.phonebook.contacts.error;\nexport const getСontactsFilter = state => state.phonebook.contactsFilter;","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactForm_contact__uCAfv\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetFilterContacts } from 'redux/contacts/slice';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(state => value);\n    } else {\n      setNumber(state => value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(resetFilterContacts());\n    const findElem = contacts.filter(\n      contact => contact.name.toUpperCase() === name.toUpperCase()\n    );\n    if (findElem.length > 0) {\n      alert(name + ' is already in contacts.');\n      return;\n    }\n    const newObj = { name, number };\n    dispatch(addContact(newObj));\n    reset();\n  };\n\n  const reset = () => {\n    setName(state => '');\n    setNumber(state => '');\n  };\n\n  return (\n    <form className={css.contact} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactList_button__7kL4l\",\"list\":\"ContactList_list__csErn\",\"name\":\"ContactList_name__UCkFW\",\"item\":\"ContactList_item__EZYHO\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { getContacts, getСontactsFilter } from '../../redux/contacts/selectors';\nimport { resetFilterContacts } from 'redux/contacts/slice';\nimport css from './ContactList.module.css';\n\nconst ContactList = function () {\nconst dispatch = useDispatch();\nconst contacts = useSelector(getContacts);\n\n  const filterContactArray = useSelector(getСontactsFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = el => {\n    dispatch(resetFilterContacts());\n    dispatch(deleteContact(el.target.dataset.id));\n  };\n\n  const resultArray =\n    filterContactArray.length > 0 ? filterContactArray : contacts;\n\n  return (\n    <ul className={css.list}>\n      {resultArray.map(({ id, name, number }) => (\n        <li className={css.item} key={id}>\n          <p className={css.name}>\n            {name}: {number}\n          </p>\n          <button\n            data-id={id}\n            onClick={handleDeleteContact}\n            className={css.button}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  updateFilter,\n  filterContacts,\n  resetFilterContacts,\n} from 'redux/contacts/slice';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = function () {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleFilterChange = e => {\n    dispatch(resetFilterContacts());\n    const { value: filterContact } = e.target;\n    dispatch(updateFilter(filterContact.toUpperCase()));\n    dispatch(filterContacts(contacts));\n  };\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilterChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <h3>Request in progress...</h3>}\n      {!isLoading && error && <h3>Error...{error}</h3>}\n      <ContactList />\n    </div>\n  );\n}"],"names":["getContacts","state","phonebook","contacts","items","getIsLoading","isLoading","getError","error","getСontactsFilter","contactsFilter","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","className","css","onSubmit","preventDefault","resetFilterContacts","filter","contact","toUpperCase","length","alert","newObj","addContact","type","pattern","title","required","onChange","filterContactArray","useEffect","fetchContacts","handleDeleteContact","el","deleteContact","dataset","id","resultArray","map","onClick","filterContact","updateFilter","filterContacts","Contacts"],"sourceRoot":""}